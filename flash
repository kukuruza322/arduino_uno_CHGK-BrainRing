#include <LedControl.h>

LedControl lc=LedControl(12,11,10,1); //инициализация дисплея 12-DIN, 11-CLK, 10-CS

byte digit0[]=   {0x00,0x38,0x44,0x44,0x44,0x44,0x38,0x00}; // number 0 byte arrays custom character
byte digit1[]=   {0x00,0x10,0x30,0x50,0x10,0x10,0x7C,0x00}; // number 1 byte arrays custom character
byte digit2[]=   {0x00,0x38,0x6C,0x0C,0x18,0x30,0x7C,0x00}; // number 2 byte arrays custom character
byte digit3[]=   {0x00,0x78,0x08,0x38,0x08,0x08,0x78,0x00}; // number 3 byte arrays custom character
byte digit4[]=   {0x00,0x00,0x48,0x48,0x78,0x08,0x08,0x00}; // number 4 byte arrays custom character
byte digit5[]=   {0x00,0x3C,0x20,0x3C,0x04,0x04,0x3C,0x00}; // number 5 byte arrays custom character
byte digit6[]=   {0x00,0x7C,0x40,0x7C,0x44,0x44,0x7C,0x00}; // number 6 byte arrays custom character
byte digit7[]=   {0x00,0x3E,0x02,0x04,0x08,0x10,0x20,0x00}; // number 7 byte arrays custom character
byte digit8[]=   {0x00,0x3C,0x24,0x3C,0x24,0x24,0x3C,0x00}; // number 8 byte arrays custom character
byte digit9[]=   {0x00,0x78,0x48,0x78,0x08,0x08,0x08,0x00}; // number 9 byte arrays custom character

bool team_answer;
bool another_team_answer;

void setup() {
    pinMode(2,INPUT_PULLUP); //кнопка правильного ответа
    pinMode(3,INPUT_PULLUP); //кнопка начала таймера
    pinMode(4,INPUT); //кнопка ответа команды 1
    pinMode(5,INPUT); //кнопка ответа команды 2
    pinMode(6,INPUT_PULLUP); //кнопка неправильного ответа
    pinMode(13,INPUT_PULLUP); //тестовый пин для выхода
    pinMode(7,OUTPUT); //красная лампа ответа команды 1
    pinMode(8,OUTPUT); //синяя лампа ответа команды 2
    pinMode(9,OUTPUT); //назначаем 9 пин за выход для динамика
    lc.shutdown(0,false); //off saving-power-mode for #0 led panel
    lc.setIntensity(0,0);   //set a brightness from 0 to 15
    digitalWrite(4, LOW);
    digitalWrite(5, LOW);
    digitalWrite(7, HIGH);
    digitalWrite(8, HIGH);
}



void start_timer() //начинает отсчет времени в 60 секунд после нажатия кнопки Начало и делает бип, запуская таймер
{   int i = 0;
    for(i=0;i<6000;i++) {
    //блок ответа красной команды  
    if (digitalRead(4)==HIGH) { 
      answer_click_tone();
      digitalWrite(7, LOW);
      team_answer=true;
      while (team_answer==true){ //вечный цикл с ожиданием нажатия кнопки правильного ответа или неправильного.
          if (digitalRead(2)==LOW) { //кнопка правильного ответа
            right_answer();
            off_all_lights();
            team_answer=false;
            break;
        }
          if (digitalRead(6)==LOW) { //кнопка неправильного ответа, переход к синей команде, запуск таймера на 20сек : отключение красной лампы, включение синей.
            another_team_answer=true;
            team_answer=false;
            wrong_answer();
            digitalWrite(7, HIGH);
            digitalWrite(8, LOW); 
            delay(1000);
                for (i=0;i<2000;i++) {
                      if (digitalRead(2)==LOW) { //правильный ответ досрочно
                        another_team_answer=false;
                        right_answer();
                        break; 
                      }
                      if (digitalRead(6)==LOW) { //неправильный ответ, выход в главное меню.
                        another_team_answer=false;
                        wrong_answer();
                        break;   
                      }                  
                      if (i==0) {
                      start_timer_tone();  
                      }     
                      if (i==1000) {
                      intermediate_timer();  
                      } 
                      if (i==1100) {
                      printByte(digit9);  
                      }    
                      if (i==1200) {
                      printByte(digit8);  
                      }
                      if (i==1300) {
                      printByte(digit7);  
                      }      
                      if (i==1400) {
                      printByte(digit6);  
                      }
                      if (i==1500) {
                      printByte(digit5);  
                      }    
                      if (i==1600) {
                      printByte(digit4);  
                      }
                      if (i==1700) {
                      printByte(digit3);  
                      }    
                      if (i==1800) {
                      printByte(digit2);  
                      }
                      if (i==1900) {
                      printByte(digit1);  
                      }
                      if (i==1999) {
                      printByte(digit0);
                      end_timer();  
                      }
                      delay(10);
                      }
             
            while (another_team_answer==true) { //цикл если таймер кончился и команда отвечает
              if (digitalRead(2)==LOW) { //правильный ответ
                another_team_answer=false;
                right_answer();
                break; 
              }
              if (digitalRead(6)==LOW) { //неправильный ответ, выход в главное меню.
                another_team_answer=false;
                wrong_answer();
                break;   
              }
            }  
          }
      }
      off_all_lights();
      break; 
    }
    //блок ответа синей команды
    if (digitalRead(5)==HIGH) { 
      answer_click_tone();
      digitalWrite(8, LOW);
      team_answer=true;
      while (team_answer==true){ //вечный цикл с ожиданием нажатия кнопки правильного ответа или неправильного.
          if (digitalRead(2)==LOW) { //кнопка правильного ответа
            right_answer();
            off_all_lights();
            team_answer=false;
            break;
        }
          if (digitalRead(6)==LOW) { //кнопка неправильного ответа, переход к красной команде, запуск таймера на 20сек : отключение красной лампы, включение синей.
            another_team_answer=true;
            team_answer=false;
            wrong_answer();
            digitalWrite(8, HIGH);
            digitalWrite(7, LOW); 
            delay(1000);
                for (i=0;i<2000;i++) {
                      if (digitalRead(2)==LOW) { //правильный ответ досрочно
                        another_team_answer=false;
                        right_answer();
                        break; 
                      }
                      if (digitalRead(6)==LOW) { //неправильный ответ, выход в главное меню.
                        another_team_answer=false;
                        wrong_answer();
                        break;   
                      }                  
                      if (i==0) {
                      start_timer_tone();  
                      }     
                      if (i==1000) {
                      intermediate_timer();  
                      } 
                      if (i==1100) {
                      printByte(digit9);  
                      }    
                      if (i==1200) {
                      printByte(digit8);  
                      }
                      if (i==1300) {
                      printByte(digit7);  
                      }      
                      if (i==1400) {
                      printByte(digit6);  
                      }
                      if (i==1500) {
                      printByte(digit5);  
                      }    
                      if (i==1600) {
                      printByte(digit4);  
                      }
                      if (i==1700) {
                      printByte(digit3);  
                      }    
                      if (i==1800) {
                      printByte(digit2);  
                      }
                      if (i==1900) {
                      printByte(digit1);  
                      }
                      if (i==1999) {
                      printByte(digit0);
                      end_timer();  
                      }
                      delay(10);
                      }
             
            while (another_team_answer==true) { //цикл если таймер кончился и команда отвечает
              if (digitalRead(2)==LOW) { //правильный ответ
                another_team_answer=false;
                right_answer();
                break; 
              }
              if (digitalRead(6)==LOW) { //неправильный ответ, выход в главное меню.
                another_team_answer=false;
                wrong_answer();
                break;   
              }
            }  
          }
      }
      off_all_lights();
      break; 
    }
        
    if (i==0) {
    start_timer_tone();  
    }     
    if (i==5000) {
    intermediate_timer();  
    } 
    if (i==5100) {
    printByte(digit9);  
    }    
    if (i==5200) {
    printByte(digit8);  
    }
    if (i==5300) {
    printByte(digit7);  
    }      
    if (i==5400) {
    printByte(digit6);  
    }
    if (i==5500) {
    printByte(digit5);  
    }    
    if (i==5600) {
    printByte(digit4);  
    }
    if (i==5700) {
    printByte(digit3);  
    }    
    if (i==5800) {
    printByte(digit2);  
    }
    if (i==5900) {
    printByte(digit1);  
    }
    if (i==5999) {
    printByte(digit0);
    end_timer();  
    }
    delay(10);
  }  
}



void printByte(byte character []) { //функция для создания изображения дисплея
  int i = 0;
  for(i=0;i<8;i++)
  {
    lc.setRow(0,i,character[i]); // this is for blank
  }
}

void loop() {
    if (digitalRead(3)==LOW) { //кнопка начала отсчета
      start_timer();
      lc.clearDisplay(0);
    }     
}

void right_answer() {
  tone(9, 1500, 100); //песня правильного ответа
  delay(200);
  tone(9, 1500, 100);
  delay(200);
  tone(9, 1500, 100);
  delay(200);
}

void wrong_answer() {
  tone(9, 50, 100); //звуки проигрыша
  delay(200);
  tone(9, 50, 100);
  delay(200);
  tone(9, 50, 300);
  delay(400);  
}

void answer_click_tone(){
  tone(9, 1500, 100);  
}
void start_timer_tone() {
  tone(9, 850, 1000);   
}

void intermediate_timer() {
  tone(9, 850, 1000);   
}

void end_timer() //делает бип в самом конце
{ 
  tone(9, 250, 1500);
  delay(1000);
}

void off_all_lights() {
  digitalWrite(7, HIGH);
  digitalWrite(8, HIGH);  
}
